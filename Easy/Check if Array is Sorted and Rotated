// Problem: Check if Array is Sorted and Rotated
// Difficulty: Easy
// Date Solved: {date.today().strftime("%Y-%m-%d")}
// Link: https://leetcode.com/problems/check-if-Array-is-Sorted-and-Rotated/
// Approach: A sorted and rotated array will have at most one drop, considering the array as circular.
// Time Complexity: O(n)
// Space Complexity: O(1)
class Solution {
    public boolean check(int[] nums) {
        int count = 0;
        int n = nums.length;

        for (int i = 0; i < n; i++) {
            // circular comparison using (i + 1) % n
            if (nums[i] > nums[(i + 1) % n]) {
                count++;
            }
            if (count > 1) return false;
        }

        return true;
    }
}
